{
    "StagesAvailable": [
        "Original", 
        "Processed"
    ], 
    "TemplateBody": {
        "Outputs": {
            "AWSEBLoadBalancerURL": {
                "Value": {
                    "Fn::Join": [
                        "", 
                        [
                            "http://", 
                            {
                                "Fn::GetAtt": [
                                    "AWSEBLoadBalancer", 
                                    "DNSName"
                                ]
                            }
                        ]
                    ]
                }, 
                "Description": "The ElasticBeanstalk ELB URL of the website"
            }
        }, 
        "AWSTemplateFormatVersion": "2010-09-09", 
        "Parameters": {
            "InstanceTypeFamily": {
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "WebServer EC2 instance type family", 
                "Default": "t2"
            }, 
            "LogPublicationControl": {
                "ConstraintDescription": "must be Boolean.", 
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "If true customer service logs will be published to S3.", 
                "AllowedValues": [
                    "true", 
                    "false"
                ], 
                "Default": "false"
            }, 
            "InstancePort": {
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "Listen Port", 
                "Default": "80"
            }, 
            "AWSEBEnvironmentId": {
                "NoEcho": "true", 
                "Type": "String"
            }, 
            "HooksPkgUrl": {
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "URL to hooks package", 
                "Default": "https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/hooks.tar.gz"
            }, 
            "AWSEBEnvironmentName": {
                "NoEcho": "true", 
                "Type": "String"
            }, 
            "AWSEBReferrerId": {
                "Default": "", 
                "NoEcho": "true", 
                "Type": "String"
            }, 
            "AppSource": {
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "The url of the application source.", 
                "Default": "https://s3.us-east-2.amazonaws.com/elasticbeanstalk-samples-us-east-2/ecs-sample.zip"
            }, 
            "EnvironmentVariables": {
                "NoEcho": "true", 
                "Type": "CommaDelimitedList", 
                "Description": "Program environment variables.", 
                "Default": ""
            }, 
            "ECSClusterName": {
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "ECS cluster to deploy to", 
                "Default": ""
            }, 
            "ECSTaskDefinitionName": {
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "ECS task definition family", 
                "Default": ""
            }, 
            "AWSEBAgentId": {
                "Default": "", 
                "NoEcho": "true", 
                "Type": "String"
            }, 
            "InstanceType": {
                "ConstraintDescription": "must be a valid EC2 instance type.", 
                "NoEcho": "true", 
                "Type": "String", 
                "Description": "WebServer EC2 instance type", 
                "AllowedValues": [ 
                    "t2.micro"
                ], 
                "Default": "t2.micro"
            }, 
            "AWSEBEnvironmentBucket": {
                "NoEcho": "true", 
                "Type": "String"
            }
        }, 
        "Resources": {
            "AWSEBSecurityGroupSSHIngress": {
                "Properties": {
                    "CidrIp": "0.0.0.0/0", 
                    "FromPort": "22", 
                    "ToPort": "22", 
                    "IpProtocol": "tcp", 
                    "GroupId": {
                        "Ref": "AWSEBSecurityGroup"
                    }
                }, 
                "Type": "AWS::EC2::SecurityGroupIngress"
            }, 
            "AWSEBAutoScalingLaunchConfiguration": {
                "Type": "AWS::AutoScaling::LaunchConfiguration", 
                "Properties": {
                    "KeyName": "Charles Access", 
                    "SecurityGroups": [
                        {
                            "Ref": "AWSEBSecurityGroup"
                        }
                    ], 
                    "UserData": {
                        "Fn::Base64": {
                            "Fn::Join": [
                                "", 
                                [
                                    "Content-Type: multipart/mixed; boundary=\"===============5189065377222898407==\"", 
                                    "\n", 
                                    "MIME-Version: 1.0", 
                                    "\n", 
                                    "", 
                                    "\n", 
                                    "--===============5189065377222898407==", 
                                    "\n", 
                                    "Content-Type: text/cloud-config; charset=\"us-ascii\"", 
                                    "\n", 
                                    "MIME-Version: 1.0", 
                                    "\n", 
                                    "Content-Transfer-Encoding: 7bit", 
                                    "\n", 
                                    "Content-Disposition: attachment; filename=\"cloud-config.txt\"", 
                                    "\n", 
                                    "", 
                                    "\n", 
                                    "#cloud-config", 
                                    "\n", 
                                    "repo_upgrade: none", 
                                    "\n", 
                                    "repo_releasever: ", 
                                    {
                                        "Fn::FindInMap": [
                                            "ContainerMeta", 
                                            "AMIMeta", 
                                            "RepoReleaseVersion"
                                        ]
                                    }, 
                                    "\n", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "CloudConfigOptions"
                                        ]
                                    }, 
                                    "\n", 
                                    "", 
                                    "\n", 
                                    "--===============5189065377222898407==", 
                                    "\n", 
                                    "Content-Type: text/x-shellscript; charset=\"us-ascii\"", 
                                    "\n", 
                                    "MIME-Version: 1.0", 
                                    "\n", 
                                    "Content-Transfer-Encoding: 7bit", 
                                    "\n", 
                                    "Content-Disposition: attachment; filename=\"user-data.txt\"", 
                                    "\n\n", 
                                    "#!/bin/bash", 
                                    "\n", 
                                    "exec > >(tee -a /var/log/eb-cfn-init.log|logger -t [eb-cfn-init] -s 2>/dev/console) 2>&1", 
                                    "\n", 
                                    "echo [`date -u +\"%Y-%m-%dT%H:%M:%SZ\"`] Started EB User Data", 
                                    "\n", 
                                    "set -x", 
                                    "\n", 
                                    "\n\n", 
                                    "function sleep_delay ", 
                                    "\n", 
                                    "{", 
                                    "\n", 
                                    "  if (( $SLEEP_TIME < $SLEEP_TIME_MAX )); then ", 
                                    "\n", 
                                    "    echo Sleeping $SLEEP_TIME", 
                                    "\n", 
                                    "    sleep $SLEEP_TIME  ", 
                                    "\n", 
                                    "    SLEEP_TIME=$(($SLEEP_TIME * 2)) ", 
                                    "\n", 
                                    "  else ", 
                                    "\n", 
                                    "    echo Sleeping $SLEEP_TIME_MAX  ", 
                                    "\n", 
                                    "    sleep $SLEEP_TIME_MAX  ", 
                                    "\n", 
                                    "  fi", 
                                    "\n", 
                                    "}", 
                                    "\n\n", 
                                    "# Executing bootstrap script", 
                                    "\n", 
                                    "SLEEP_TIME=10", 
                                    "\n", 
                                    "SLEEP_TIME_MAX=3600", 
                                    "\n", 
                                    "while true; do ", 
                                    "\n", 
                                    "  curl ", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "UserDataScript"
                                        ]
                                    }, 
                                    " > /tmp/ebbootstrap.sh ", 
                                    "\n", 
                                    "  RESULT=$?", 
                                    "\n", 
                                    "  if [[ \"$RESULT\" -ne 0 ]]; then ", 
                                    "\n", 
                                    "    sleep_delay ", 
                                    "\n", 
                                    "  else", 
                                    "\n", 
                                    "    /bin/bash /tmp/ebbootstrap.sh ", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "rpms"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "tarballs"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "ebgems"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Ref": "AWSEBInstanceLaunchWaitHandle"
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Ref": "AWS::StackId"
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Ref": "AWS::Region"
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "guid"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "AWSEBHealthdGroupId"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "AWSEBHealthdEndpoint"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "ProxyServer"
                                        ]
                                    }, 
                                    "'", 
                                    "    '", 
                                    {
                                        "Fn::FindInMap": [
                                            "AWSEBOptions", 
                                            "options", 
                                            "HealthdProxyLogLocation"
                                        ]
                                    }, 
                                    "'", 
                                    "    && ", 
                                    "\n", 
                                    "    exit 0  ", 
                                    "\n", 
                                    "  fi ", 
                                    "\n", 
                                    "done", 
                                    "\n\n", 
                                    "--===============5189065377222898407==-- "
                                ]
                            ]
                        }
                    }, 
                    "ImageId": {
                        "Fn::FindInMap": [
                            "AWSEBAWSRegionArch2AMI", 
                            {
                                "Ref": "AWS::Region"
                            }, 
                            {
                                "Fn::FindInMap": [
                                    "AWSEBAWSInstanceTypeFamily2Arch", 
                                    {
                                        "Ref": "InstanceTypeFamily"
                                    }, 
                                    "Arch"
                                ]
                            }
                        ]
                    }, 
                    "BlockDeviceMappings": [
                        {
                            "Ebs": {
                                "VolumeType": "gp2", 
                                "VolumeSize": "12", 
                                "DeleteOnTermination": "true"
                            }, 
                            "DeviceName": "/dev/xvdcz"
                        }
                    ], 
                    "IamInstanceProfile": "aws-elasticbeanstalk-ec2-role", 
                    "InstanceType": {
                        "Ref": "InstanceType"
                    }, 
                    "InstanceMonitoring": false
                }
            }, 
            "AWSEBLoadBalancer": {
                "Properties": {
                    "SecurityGroups": [
                        {
                            "Ref": "AWSEBLoadBalancerSecurityGroup"
                        }
                    ], 
                    "Listeners": [
                        {
                            "LoadBalancerPort": "80", 
                            "Protocol": "HTTP", 
                            "InstanceProtocol": "HTTP", 
                            "InstancePort": "3082"
                        }, 
                        {
                            "LoadBalancerPort": "8080", 
                            "Protocol": "HTTP", 
                            "InstanceProtocol": "HTTP", 
                            "InstancePort": "3081"
                        }
                    ], 
                    "Subnets": [
                        "subnet-dc1019b4", 
                        "subnet-0888cf72", 
                        "subnet-570ba41b"
                    ], 
                    "Policies": [], 
                    "HealthCheck": {
                        "Target": {
                            "Fn::Join": [
                                "", 
                                [
                                    "HTTP:", 
                                    {
                                        "Ref": "InstancePort"
                                    }, 
                                    "/health"
                                ]
                            ]
                        }, 
                        "UnhealthyThreshold": "5", 
                        "Timeout": "5", 
                        "HealthyThreshold": "3", 
                        "Interval": "10"
                    }
                }, 
                "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
            }, 
            "AWSEBLoadBalancerSecurityGroup": {
                "Properties": {
                    "GroupDescription": "Load Balancer Security Group", 
                    "VpcId": "vpc-fbe20390", 
                    "SecurityGroupIngress": [
                        {
                            "CidrIp": "0.0.0.0/0", 
                            "FromPort": "80", 
                            "ToPort": "80", 
                            "IpProtocol": "tcp"
                        }, 
                        {
                            "CidrIp": "0.0.0.0/0", 
                            "FromPort": "8080", 
                            "ToPort": "8080", 
                            "IpProtocol": "tcp"
                        }
                    ], 
                    "SecurityGroupEgress": [
                        {
                            "CidrIp": "0.0.0.0/0", 
                            "FromPort": "3082", 
                            "ToPort": "3082", 
                            "IpProtocol": "tcp"
                        }, 
                        {
                            "CidrIp": "0.0.0.0/0", 
                            "FromPort": "3081", 
                            "ToPort": "3081", 
                            "IpProtocol": "tcp"
                        }
                    ]
                }, 
                "Type": "AWS::EC2::SecurityGroup"
            }, 
            "AWSEBSecurityGroup": {
                "Properties": {
                    "GroupDescription": "VPC Security Group", 
                    "VpcId": "vpc-fbe20390", 
                    "SecurityGroupIngress": [
                        {
                            "FromPort": "3082", 
                            "ToPort": "3082", 
                            "IpProtocol": "tcp", 
                            "SourceSecurityGroupId": {
                                "Ref": "AWSEBLoadBalancerSecurityGroup"
                            }
                        }, 
                        {
                            "FromPort": "3081", 
                            "ToPort": "3081", 
                            "IpProtocol": "tcp", 
                            "SourceSecurityGroupId": {
                                "Ref": "AWSEBLoadBalancerSecurityGroup"
                            }
                        }
                    ]
                }, 
                "Type": "AWS::EC2::SecurityGroup"
            }, 
            "AWSEBAutoScalingScaleDownPolicy": {
                "Properties": {
                    "ScalingAdjustment": "-1", 
                    "AutoScalingGroupName": {
                        "Ref": "AWSEBAutoScalingGroup"
                    }, 
                    "AdjustmentType": "ChangeInCapacity"
                }, 
                "Type": "AWS::AutoScaling::ScalingPolicy"
            }, 
            "AWSEBInstanceLaunchWaitHandle": {
                "Type": "AWS::CloudFormation::WaitConditionHandle"
            }, 
            "AWSEBUpdateWaitConditionBKMGua": {
                "Type": "AWS::CloudFormation::WaitCondition", 
                "DependsOn": [
                    "AWSEBSecurityGroupSSHIngress", 
                    "AWSEBAutoScalingLaunchConfiguration", 
                    "AWSEBLoadBalancer", 
                    "AWSEBLoadBalancerSecurityGroup", 
                    "AWSEBSecurityGroup", 
                    "AWSEBAutoScalingScaleDownPolicy", 
                    "AWSEBInstanceLaunchWaitHandle", 
                    "AWSEBAutoScalingGroup", 
                    "AWSEBInstanceLaunchWaitCondition", 
                    "AWSEBAutoScalingScaleUpPolicy", 
                    "AWSEBCloudwatchAlarmHigh", 
                    "AWSEBBeanstalkMetadata", 
                    "AWSEBCloudwatchAlarmLow"
                ], 
                "Properties": {
                    "Timeout": "43200", 
                    "Count": "1", 
                    "Handle": {
                        "Ref": "AWSEBUpdateWaitConditionHandleBKMGua"
                    }
                }
            }, 
            "AWSEBAutoScalingGroup": {
                "Metadata": {
                    "ForcingMetadataUpdate": "Changing something in the metadata will force re-compuation", 
                    "AWS::CloudFormation::Init": {
                        "Infra-WriteTailLogsConf": {
                            "files": {
                                "/opt/elasticbeanstalk/tasks/taillogs.d/eb-activity.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/eb-commandprocessor.log", 
                                                "/var/log/eb-activity.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/taillogs.d/eb-version-deployment.conf": {
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/eb-version-deployment.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "Infra-WriteBundleLogsConf": {
                            "files": {
                                "/opt/elasticbeanstalk/tasks/bundlelogs.d/eb-system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/eb-cfn-init*", 
                                                "/var/log/eb-tools*", 
                                                "/var/log/eb-publish-logs*", 
                                                "/var/log/eb-commandprocessor*", 
                                                "/var/log/eb-activity*", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/bundlelogs.d/cfn-system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/cfn-hup*", 
                                                "/var/log/cfn-init*", 
                                                "/var/log/cfn-wire*", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/bundlelogs.d/eb-version-deployment.conf": {
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/eb-version-deployment.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/bundlelogs.d/cloud-init-system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/cloud-init*", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/bundlelogs.d/system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/cron", 
                                                "/var/log/messages", 
                                                "/var/log/yum.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "InfoTask-TailLogs": {
                            "commands": {
                                "taillogs": {
                                    "command": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "tailLogs.py --concatenate --conf-path '/opt/elasticbeanstalk/tasks/taillogs.d/*' --location-prefix ", 
                                                {
                                                    "Fn::FindInMap": [
                                                        "EnvironmentInfoTasks", 
                                                        "tail", 
                                                        "LocationPrefix"
                                                    ]
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "Infra-WriteLeaderTestScript": {
                            "files": {
                                "/opt/elasticbeanstalk/bin/leader-test.sh": {
                                    "mode": "000755", 
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "#!/bin/bash", 
                                                "\n", 
                                                "if [[ \"$EB_IS_COMMAND_LEADER\" == \"true\" ]]; then ", 
                                                "\n", 
                                                "  exit 0 ", 
                                                "\n", 
                                                "else  ", 
                                                "\n", 
                                                "  exit 1 ", 
                                                "\n", 
                                                "fi ", 
                                                "\n"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "InfoTask-BundleLogs": {
                            "commands": {
                                "bundlelogs": {
                                    "command": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "bundleLogs.py --conf-path '/opt/elasticbeanstalk/tasks/bundlelogs.d/*' --location-prefix ", 
                                                {
                                                    "Fn::FindInMap": [
                                                        "EnvironmentInfoTasks", 
                                                        "bundle", 
                                                        "LocationPrefix"
                                                    ]
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "AWSEBBaseConfig": {
                            "files": {
                                "/etc/cfn/cfn-hup.conf": {
                                    "mode": "000400", 
                                    "owner": "root", 
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "[main]", 
                                                "\n", 
                                                "stack=", 
                                                {
                                                    "Ref": "AWS::StackId"
                                                }, 
                                                "\n", 
                                                "region=", 
                                                {
                                                    "Ref": "AWS::Region"
                                                }, 
                                                "\n", 
                                                "verbose=true\n", 
                                                "multi-threaded=false\n"
                                            ]
                                        ]
                                    }, 
                                    "group": "root"
                                }, 
                                "/etc/elasticbeanstalk/.aws-eb-stack.properties": {
                                    "mode": "000440", 
                                    "owner": "root", 
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "environment_id=", 
                                                {
                                                    "Ref": "AWSEBEnvironmentId"
                                                }, 
                                                "\n", 
                                                "environment_bucket=", 
                                                {
                                                    "Ref": "AWSEBEnvironmentBucket"
                                                }, 
                                                "\n", 
                                                "stack_name=", 
                                                {
                                                    "Ref": "AWS::StackId"
                                                }, 
                                                "\n", 
                                                "resource=", 
                                                "AWSEBAutoScalingGroup", 
                                                "\n", 
                                                "region=", 
                                                {
                                                    "Ref": "AWS::Region"
                                                }, 
                                                "\n\n"
                                            ]
                                        ]
                                    }, 
                                    "group": "root"
                                }, 
                                "/etc/init/cfn-hup.conf": {
                                    "mode": "000400", 
                                    "owner": "root", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "stop on runlevel [016]", 
                                                "respawn", 
                                                "script", 
                                                "  /opt/aws/bin/cfn-hup", 
                                                "end script"
                                            ]
                                        ]
                                    }, 
                                    "group": "root"
                                }, 
                                "/etc/cfn/hooks.d/aws-eb-command-handler.conf": {
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "[aws-eb-command-handler]", 
                                                "\n", 
                                                "triggers=on.command", 
                                                "\n", 
                                                "path=ElasticBeanstalkCommand-", 
                                                "AWSEBAutoScalingGroup", 
                                                "\n", 
                                                "action=/opt/elasticbeanstalk/bin/command-processor", 
                                                "\n"
                                            ]
                                        ]
                                    }
                                }
                            }, 
                            "commands": {
                                "clearbackupfiles": {
                                    "command": "rm -f /etc/cfn/hooks.d/*.bak"
                                }
                            }
                        }, 
                        "Hook-PreAppDeploy": {
                            "commands": {
                                "hooks": {
                                    "command": "echo place holder"
                                }
                            }
                        }, 
                        "InfoTask-SystemTailLogs": {
                            "commands": {
                                "systemtaillogs": {
                                    "command": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "tailLogs.py --conf-path '/opt/elasticbeanstalk/tasks/systemtaillogs.d/*' --location-prefix ", 
                                                {
                                                    "Fn::FindInMap": [
                                                        "EnvironmentInfoTasks", 
                                                        "systemtail", 
                                                        "LocationPrefix"
                                                    ]
                                                }
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "AWSEBMessageOfTheDay": {
                            "files": {
                                "/tmp/10eb-banner": {
                                    "mode": "000755", 
                                    "owner": "root", 
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "cat << EOF", 
                                                "\n", 
                                                " _____ _           _   _      ____                       _        _ _", 
                                                "\n", 
                                                "| ____| | __ _ ___| |_(_) ___| __ )  ___  __ _ _ __  ___| |_ __ _| | | __", 
                                                "\n", 
                                                "|  _| | |/ _\\` / __| __| |/ __|  _ \\ / _ \\/ _\\` | '_ \\/ __| __/ _\\` | | |/ /", 
                                                "\n", 
                                                "| |___| | (_| \\__ \\ |_| | (__| |_) |  __/ (_| | | | \\__ \\ || (_| | |   <", 
                                                "\n", 
                                                "|_____|_|\\__,_|___/\\__|_|\\___|____/ \\___|\\__,_|_| |_|___/\\__\\__,_|_|_|\\_\\\\", 
                                                "\n", 
                                                "                                       Amazon Linux AMI", 
                                                "\n", 
                                                "\n", 
                                                "This EC2 instance is managed by AWS Elastic Beanstalk. Changes made via SSH ", 
                                                "\n", 
                                                "WILL BE LOST if the instance is replaced by auto-scaling. For more information ", 
                                                "\n", 
                                                "on customizing your Elastic Beanstalk environment, see our documentation here: ", 
                                                "\n", 
                                                "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customize-containers-ec2.html", 
                                                "\n", 
                                                "EOF", 
                                                "\n"
                                            ]
                                        ]
                                    }, 
                                    "group": "root"
                                }
                            }, 
                            "commands": {
                                "01clearoriginal": {
                                    "command": "rm -f /etc/update-motd.d/*"
                                }, 
                                "02createbanner": {
                                    "command": "mv /tmp/10eb-banner /etc/update-motd.d/10eb-banner"
                                }, 
                                "03updatebanner": {
                                    "command": "/usr/sbin/update-motd"
                                }
                            }
                        }, 
                        "Infra-WriteSystemTailLogsConf": {
                            "files": {
                                "/opt/elasticbeanstalk/tasks/systemtaillogs.d/eb-system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/eb-cfn-init.log", 
                                                "/var/log/eb-tools.log", 
                                                "/var/log/eb-publish-logs.log", 
                                                "/var/log/eb-commandprocessor.log", 
                                                "/var/log/eb-activity.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/systemtaillogs.d/eb-version-deployment.conf": {
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/eb-version-deployment.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/systemtaillogs.d/cfn-system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/cfn-hup.log", 
                                                "/var/log/cfn-init.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/systemtaillogs.d/system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/cron", 
                                                "/var/log/messages", 
                                                "/var/log/yum.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }, 
                                "/opt/elasticbeanstalk/tasks/systemtaillogs.d/cloud-init-system.conf": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "\n", 
                                            [
                                                "/var/log/cloud-init.log", 
                                                ""
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "Infra-PatchInstance": {
                            "files": {
                                "/opt/elasticbeanstalk/bin/patch_instance": {
                                    "mode": "000750", 
                                    "owner": "root", 
                                    "source": {
                                        "Fn::Select": [
                                            0, 
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSEBOptions", 
                                                    "options", 
                                                    "ebpatchscripturl"
                                                ]
                                            }
                                        ]
                                    }, 
                                    "group": "root"
                                }
                            }, 
                            "commands": {
                                "01executepatch": {
                                    "command": "/opt/elasticbeanstalk/bin/patch_instance"
                                }
                            }
                        }, 
                        "Infra-InstallContainerHooksPkg": {
                            "commands": {
                                "01download_container_hooks": {
                                    "command": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "curl -sS --retry 3 '", 
                                                {
                                                    "Ref": "HooksPkgUrl"
                                                }, 
                                                "' -o /tmp/hooks.tar.gz"
                                            ]
                                        ]
                                    }
                                }, 
                                "03cleanup": {
                                    "command": "rm -f /tmp/hooks.tar.gz"
                                }, 
                                "00mkdir": {
                                    "command": "mkdir -p /opt/elasticbeanstalk"
                                }, 
                                "02install_container_hooks": {
                                    "command": "tar zxf /tmp/hooks.tar.gz --no-same-owner --no-same-permission -C /opt/elasticbeanstalk"
                                }
                            }
                        }, 
                        "Infra-WritePublishLogsCron": {
                            "files": {
                                "/etc/cron.d/publishlogs": {
                                    "mode": "000644", 
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "SHELL=/bin/bash", 
                                                "\n", 
                                                "PATH=/sbin:/bin:/usr/sbin:/usr/bin", 
                                                "\n", 
                                                "MAILTO=\"\"", 
                                                "\n", 
                                                "HOME=/", 
                                                "\n", 
                                                "10,30,50 * * * * root ", 
                                                "publishLogs.py --de-dupe --conf-path '/opt/elasticbeanstalk/tasks/publishlogs.d/*' --location-prefix ", 
                                                {
                                                    "Fn::FindInMap": [
                                                        "EnvironmentInfoTasks", 
                                                        "publish", 
                                                        "LocationPrefix"
                                                    ]
                                                }, 
                                                " --num-concurrent 2", 
                                                "\n", 
                                                "05,25,45 * * * * root ", 
                                                "clearStaleLogPublishingRecords.py", 
                                                "\n"
                                            ]
                                        ]
                                    }
                                }
                            }
                        }, 
                        "Infra-WriteApplication1": {
                            "commands": {
                                "01mkdir": {
                                    "command": "rm -rf /opt/elasticbeanstalk/deploy/appsource/; mkdir -p /opt/elasticbeanstalk/deploy/appsource/"
                                }
                            }
                        }, 
                        "configSets": {
                            "Infra-WriteTailLogsConf": [
                                "Infra-WriteTailLogsConf"
                            ], 
                            "Infra-WriteBundleLogsConf": [
                                "Infra-WriteBundleLogsConf"
                            ], 
                            "InfoTask-TailLogs": [
                                "InfoTask-TailLogs"
                            ], 
                            "InfoTask-BundleLogs": [
                                "InfoTask-BundleLogs"
                            ], 
                            "_OnInstanceReboot": [
                                "AWSEBBaseConfig"
                            ], 
                            "_AppInstall": [
                                "Hook-PreAppDeploy"
                            ], 
                            "Infra-EmbeddedPreBuild": [], 
                            "Hook-PreAppDeploy": [
                                "Hook-PreAppDeploy"
                            ], 
                            "InfoTask-SystemTailLogs": [
                                "InfoTask-SystemTailLogs"
                            ], 
                            "Infra-WriteSystemTailLogsConf": [
                                "Infra-WriteSystemTailLogsConf"
                            ], 
                            "_OnInstanceBoot": [
                                "AWSEBBaseConfig", 
                                "AWSEBMessageOfTheDay", 
                                "AWSEBULimitConfig", 
                                "Infra-InstallContainerHooksPkg", 
                                "Infra-WriteLeaderTestScript", 
                                "Infra-WriteTailLogsConf", 
                                "Infra-WriteSystemTailLogsConf", 
                                "Infra-WriteBundleLogsConf", 
                                "Infra-WritePublishLogsConf", 
                                "Infra-WritePublishLogsCron"
                            ], 
                            "Infra-EmbeddedPostBuild": [], 
                            "Infra-WritePublishLogsCron": [
                                "Infra-WritePublishLogsCron"
                            ], 
                            "Infra-WriteApplication1": [
                                "Infra-WriteApplication1"
                            ], 
                            "Infra-WriteApplication2": [
                                "Infra-WriteApplication2"
                            ], 
                            "Infra-WritePublishLogsConf": [
                                "Infra-WritePublishLogsConf"
                            ], 
                            "_Infra-PatchInstance": [
                                "Infra-PatchInstance"
                            ]
                        }, 
                        "Infra-WriteApplication2": {
                            "files": {
                                "/opt/elasticbeanstalk/bin/download_source_bundle": {
                                    "owner": "root", 
                                    "mode": "000750", 
                                    "source": {
                                        "Fn::Select": [
                                            0, 
                                            {
                                                "Fn::FindInMap": [
                                                    "AWSEBOptions", 
                                                    "options", 
                                                    "downloadSourceBundleScriptLocation"
                                                ]
                                            }
                                        ]
                                    }, 
                                    "group": "root"
                                }
                            }, 
                            "commands": {
                                "01downloadVersion": {
                                    "command": "/opt/elasticbeanstalk/bin/download_source_bundle"
                                }, 
                                "02deleteVersionDownloadScriptFile": {
                                    "command": "rm /opt/elasticbeanstalk/bin/download_source_bundle"
                                }
                            }
                        }, 
                        "Infra-WritePublishLogsConf": {
                            "files": {}
                        }, 
                        "AWSEBULimitConfig": {
                            "files": {
                                "/etc/elasticbeanstalk/set-ulimit.sh": {
                                    "mode": "000755", 
                                    "owner": "root", 
                                    "content": {
                                        "Fn::Join": [
                                            "", 
                                            [
                                                "#!/bin/bash -xe", 
                                                "\n", 
                                                "", 
                                                "\n", 
                                                "# System imposed global limit", 
                                                "\n", 
                                                "FILES_MAX=$(cat /proc/sys/fs/file-max)", 
                                                "\n", 
                                                "", 
                                                "\n", 
                                                "if [[ ! $FILES_MAX =~ ^[0-9]+$ ]]; then", 
                                                "\n", 
                                                "    echo WARNING: Unable to determine file max for this system", 
                                                "\n", 
                                                "    exit 0", 
                                                "\n", 
                                                "fi", 
                                                "\n", 
                                                "", 
                                                "\n", 
                                                "# Per user limit", 
                                                "\n", 
                                                "let \"USER_LIMIT=$FILES_MAX/3\"", 
                                                "\n", 
                                                "", 
                                                "\n", 
                                                "if [ $USER_LIMIT -lt 4096 ]; then", 
                                                "\n", 
                                                "    USER_LIMIT=4096", 
                                                "\n", 
                                                "fi", 
                                                "\n", 
                                                "", 
                                                "\n", 
                                                "if [ $USER_LIMIT -gt 200000 ]; then", 
                                                "\n", 
                                                "    USER_LIMIT=200000", 
                                                "\n", 
                                                "fi", 
                                                "\n", 
                                                "", 
                                                "\n", 
                                                "ulimit -n $USER_LIMIT", 
                                                "\n"
                                            ]
                                        ]
                                    }, 
                                    "group": "root"
                                }
                            }, 
                            "commands": {
                                "00removebackup": {
                                    "command": "rm -f /etc/elasticbeanstalk/set-ulimit.sh.bak*"
                                }
                            }
                        }
                    }, 
                    "AWS::ElasticBeanstalk::Ext": {
                        "_AppSourceUrlFileContent": {
                            "url": {
                                "Ref": "AppSource"
                            }
                        }, 
                        "_TriggersConfig": {
                            "configDeploy": {
                                "_Command": "CMD-ConfigDeploy", 
                                "_WatchGroups": [
                                    "_TriggerConfigDeployment"
                                ]
                            }, 
                            "applicationDeploy": {
                                "_Command": "CMD-AppDeploy", 
                                "_WatchGroups": [
                                    "_TriggerAppDeployment"
                                ]
                            }
                        }, 
                        "_ParameterTriggers": {
                            "_TriggerConfigDeployment": [
                                "EnvironmentVariables", 
                                "InstancePort", 
                                "LogPublicationControl"
                            ], 
                            "_TriggerAppDeployment": [
                                "AppSource"
                            ]
                        }, 
                        "_ContainerConfigFileContent": {
                            "container": {
                                "docker_volume": "/dev/xvdcz", 
                                "config_staging_dir": "/tmp", 
                                "deployment_manifest": "/opt/elasticbeanstalk/deploy/manifest", 
                                "ecs_agent_override": "", 
                                "ecs_task_arn_file": "/etc/elasticbeanstalk/.ecs-task-arn", 
                                "docker_ps_log": "/var/log/docker-ps.log", 
                                "rpm_overrides": "", 
                                "ecs_task_def": {
                                    "Ref": "ECSTaskDefinitionName"
                                }, 
                                "log_group_name_prefix": "/aws/elasticbeanstalk", 
                                "ecs_region": {
                                    "Ref": "AWS::Region"
                                }, 
                                "docker_events_log": "/var/log/docker-events.log", 
                                "app_deploy_dir": "/var/app/current", 
                                "ecs_cluster": {
                                    "Ref": "ECSClusterName"
                                }, 
                                "app_staging_dir": "/var/app/staging", 
                                "instance_port": {
                                    "Ref": "InstancePort"
                                }, 
                                "host_log_dir": "/var/log/containers", 
                                "default_log_list": [
                                    "/var/log/ecs/ecs-init.log", 
                                    "/var/log/eb-ecs-mgr.log", 
                                    "/var/log/ecs/ecs-agent.log", 
                                    "/var/log/docker-events.log"
                                ], 
                                "support_files_dir": "/opt/elasticbeanstalk/containerfiles/support", 
                                "source_bundle": "/opt/elasticbeanstalk/deploy/appsource/source_bundle", 
                                "common_log_list": [
                                    "/var/log/eb-activity.log"
                                ]
                            }, 
                            "optionsettings": {
                                "aws:elasticbeanstalk:application:environment": {
                                    "Ref": "EnvironmentVariables"
                                }, 
                                "aws:elasticbeanstalk:hostmanager": {
                                    "LogPublicationControl": {
                                        "Ref": "LogPublicationControl"
                                    }
                                }
                            }, 
                            "system": {
                                "LogPublicationControl": {
                                    "Ref": "LogPublicationControl"
                                }, 
                                "AWSEBAgentId": {
                                    "Ref": "AWSEBAgentId"
                                }, 
                                "AWSEBReferrerId": {
                                    "Ref": "AWSEBReferrerId"
                                }
                            }, 
                            "commands": {
                                "CMD-TailLogs": {
                                    "persistent_configuration": true, 
                                    "stages": [
                                        {
                                            "name": "TailLogsDockerPS", 
                                            "actions": [
                                                {
                                                    "name": "DockerPS", 
                                                    "type": "sh", 
                                                    "value": "echo \"'docker ps' ran at `date`: \" >> /var/log/docker-ps.log && docker ps >> /var/log/docker-ps.log"
                                                }
                                            ]
                                        }, 
                                        {
                                            "name": "TailLogs", 
                                            "actions": [
                                                {
                                                    "name": "TailLogs", 
                                                    "type": "sh", 
                                                    "value": "tailLogs.py --concatenate --conf-path '/opt/elasticbeanstalk/tasks/taillogs.d/*' --location-prefix 'resources/environments/logs/tail/'"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-PreInit": {
                                    "refresh_manifest": true, 
                                    "stages": [
                                        {
                                            "name": "PreInitStage0", 
                                            "actions": [
                                                {
                                                    "name": "DownloadSourceBundle", 
                                                    "type": "infra", 
                                                    "value": "/opt/elasticbeanstalk/bin/download-source-bundle"
                                                }, 
                                                {
                                                    "name": "PreInitHook", 
                                                    "type": "hook", 
                                                    "value": "preinit"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-Startup": {
                                    "stages": [
                                        {
                                            "name": "StartupStage0", 
                                            "actions": [
                                                {
                                                    "name": "HealthdLogRotation", 
                                                    "type": "infra", 
                                                    "value": "infra-healthd_log_rotation.rb"
                                                }, 
                                                {
                                                    "name": "HealthdHTTPDLogging", 
                                                    "type": "infra", 
                                                    "value": "infra-healthd_httpd_logging.rb"
                                                }, 
                                                {
                                                    "name": "HealthdNginxLogging", 
                                                    "type": "infra", 
                                                    "value": "infra-healthd_nginx_logging.rb"
                                                }, 
                                                {
                                                    "name": "EbExtensionPreBuild", 
                                                    "type": "infra", 
                                                    "value": "infra-embedded_prebuild.rb"
                                                }, 
                                                {
                                                    "name": "AppDeployPreHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/pre"
                                                }, 
                                                {
                                                    "name": "EbExtensionPostBuild", 
                                                    "type": "infra", 
                                                    "value": "infra-embedded_postbuild.rb"
                                                }, 
                                                {
                                                    "name": "InfraCleanEbExtension", 
                                                    "type": "infra", 
                                                    "value": "infra-clean_ebextensions_dir.rb"
                                                }
                                            ]
                                        }, 
                                        {
                                            "name": "StartupStage1", 
                                            "actions": [
                                                {
                                                    "name": "AppDeployEnactHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/enact"
                                                }, 
                                                {
                                                    "name": "AppDeployPostHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/post"
                                                }, 
                                                {
                                                    "name": "PostInitHook", 
                                                    "type": "hook", 
                                                    "value": "postinit"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-PublishLogs": {
                                    "persistent_configuration": true, 
                                    "stages": [
                                        {
                                            "name": "PublishLogs", 
                                            "actions": [
                                                {
                                                    "name": "PublishLogs", 
                                                    "type": "sh", 
                                                    "value": "publishLogs.py --de-dupe --conf-path '/opt/elasticbeanstalk/tasks/publishlogs.d/*' --location-prefix 'resources/environments/logs/publish/' --num-concurrent 2"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-ImmutableDeploymentFlip": {
                                    "persistent_configuration": true, 
                                    "stages": [
                                        {
                                            "name": "ImmutableDeploymentFlip", 
                                            "actions": [
                                                {
                                                    "name": "FlipCommandRegistration", 
                                                    "type": "infra", 
                                                    "value": "infra-reregister-cfn-hup.rb"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-AppDeploy": {
                                    "refresh_manifest": true, 
                                    "stages": [
                                        {
                                            "name": "AppDeployStage0", 
                                            "actions": [
                                                {
                                                    "name": "DownloadSourceBundle", 
                                                    "type": "infra", 
                                                    "value": "/opt/elasticbeanstalk/bin/download-source-bundle"
                                                }, 
                                                {
                                                    "name": "EbExtensionPreBuild", 
                                                    "type": "infra", 
                                                    "value": "infra-embedded_prebuild.rb"
                                                }, 
                                                {
                                                    "name": "AppDeployPreHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/pre"
                                                }, 
                                                {
                                                    "name": "EbExtensionPostBuild", 
                                                    "type": "infra", 
                                                    "value": "infra-embedded_postbuild.rb"
                                                }, 
                                                {
                                                    "name": "InfraCleanEbextension", 
                                                    "type": "infra", 
                                                    "value": "infra-clean_ebextensions_dir.rb"
                                                }
                                            ]
                                        }, 
                                        {
                                            "name": "AppDeployStage1", 
                                            "actions": [
                                                {
                                                    "name": "AppDeployEnactHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/enact"
                                                }, 
                                                {
                                                    "name": "AppDeployPostHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/post"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-BundleLogs": {
                                    "persistent_configuration": true, 
                                    "stages": [
                                        {
                                            "name": "BundleLogs", 
                                            "actions": [
                                                {
                                                    "name": "BundleLogs", 
                                                    "type": "sh", 
                                                    "value": "bundleLogs.py --conf-path '/opt/elasticbeanstalk/tasks/bundlelogs.d/*' --location-prefix 'resources/environments/logs/bundle/'"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-SelfStartup": {
                                    "stages": [
                                        {
                                            "name": "StartupStage0", 
                                            "actions": [
                                                {
                                                    "name": "HealthdLogRotation", 
                                                    "type": "infra", 
                                                    "value": "infra-healthd_log_rotation.rb"
                                                }, 
                                                {
                                                    "name": "HealthdHTTPDLogging", 
                                                    "type": "infra", 
                                                    "value": "infra-healthd_httpd_logging.rb"
                                                }, 
                                                {
                                                    "name": "HealthdNginxLogging", 
                                                    "type": "infra", 
                                                    "value": "infra-healthd_nginx_logging.rb"
                                                }, 
                                                {
                                                    "name": "EbExtensionPreBuild", 
                                                    "type": "infra", 
                                                    "value": "infra-embedded_prebuild.rb"
                                                }, 
                                                {
                                                    "name": "AppDeployPreHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/pre"
                                                }, 
                                                {
                                                    "name": "EbExtensionPostBuild", 
                                                    "type": "infra", 
                                                    "value": "infra-embedded_postbuild.rb"
                                                }, 
                                                {
                                                    "name": "InfraCleanEbextension", 
                                                    "type": "infra", 
                                                    "value": "infra-clean_ebextensions_dir.rb"
                                                }
                                            ]
                                        }, 
                                        {
                                            "name": "StartupStage1", 
                                            "actions": [
                                                {
                                                    "name": "AppDeployEnactHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/enact"
                                                }, 
                                                {
                                                    "name": "AppDeployPostHook", 
                                                    "type": "hook", 
                                                    "value": "appdeploy/post"
                                                }, 
                                                {
                                                    "name": "PostInitHook", 
                                                    "type": "hook", 
                                                    "value": "postinit"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-SystemTailLogs": {
                                    "persistent_configuration": true, 
                                    "stages": [
                                        {
                                            "name": "SystemTailLogs", 
                                            "actions": [
                                                {
                                                    "name": "SystemTailLogs", 
                                                    "type": "sh", 
                                                    "value": "tailLogs.py --concatenate --conf-path '/opt/elasticbeanstalk/tasks/systemtaillogs.d/*' --location-prefix 'resources/environments/logs/systemtail/'"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-RestartAppServer": {
                                    "stages": [
                                        {
                                            "name": "RestartAppServerStage0", 
                                            "actions": [
                                                {
                                                    "name": "RestartAppServerPreHook", 
                                                    "type": "hook", 
                                                    "value": "restartappserver/pre"
                                                }
                                            ]
                                        }, 
                                        {
                                            "name": "RestartAppServerStage1", 
                                            "actions": [
                                                {
                                                    "name": "RestartAppServerEnactHook", 
                                                    "type": "hook", 
                                                    "value": "restartappserver/enact"
                                                }, 
                                                {
                                                    "name": "RestartAppServerPostHook", 
                                                    "type": "hook", 
                                                    "value": "restartappserver/post"
                                                }
                                            ]
                                        }
                                    ]
                                }, 
                                "CMD-ConfigDeploy": {
                                    "refresh_manifest": true, 
                                    "stages": [
                                        {
                                            "name": "ConfigDeployStage0", 
                                            "actions": [
                                                {
                                                    "name": "ConfigDeployPreHook", 
                                                    "type": "hook", 
                                                    "value": "configdeploy/pre"
                                                }
                                            ]
                                        }, 
                                        {
                                            "name": "ConfigDeployStage1", 
                                            "actions": [
                                                {
                                                    "name": "ConfigDeployEnactHook", 
                                                    "type": "hook", 
                                                    "value": "configdeploy/enact"
                                                }, 
                                                {
                                                    "name": "ConfigDeployPostHook", 
                                                    "type": "hook", 
                                                    "value": "configdeploy/post"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }, 
                        "_LaunchS3URL": "https://elasticbeanstalk-us-east-2.s3.us-east-2.amazonaws.com/environments/e3c251ef-685b-4a17-8929-238cf34b8ad3/launch_control?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20190926T055032Z&X-Amz-SignedHeaders=host&X-Amz-Expires=43200&X-Amz-Credential=AKIAIBTBASQRZJTNSFRQ%2F20190926%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Signature=b5c281adc28c94b8153533c841732e8172285d215ee3b54b1ec025f7b3ee5e6c", 
                        "_API": {
                            "_Commands": {
                                "CMD-TailLogs": {
                                    "_Stages": {
                                        "01_enact": [
                                            "InfoTask-TailLogs"
                                        ]
                                    }
                                }, 
                                "CMD-Startup": {
                                    "_RunStaged": "true", 
                                    "_Stages": {
                                        "01_pre": [], 
                                        "02_enact": []
                                    }
                                }, 
                                "CMD-AppDeploy": {
                                    "_RunStaged": "true", 
                                    "_Stages": {
                                        "01_pre": [], 
                                        "02_enact": []
                                    }
                                }, 
                                "CMD-BundleLogs": {
                                    "_Stages": {
                                        "01_enact": [
                                            "InfoTask-BundleLogs"
                                        ]
                                    }
                                }, 
                                "CMD-SystemTailLogs": {
                                    "_Stages": {
                                        "01_enact": [
                                            "InfoTask-SystemTailLogs"
                                        ]
                                    }
                                }, 
                                "CMD-PatchInstance": {
                                    "_Stages": {
                                        "01_enact": [
                                            "_Infra-PatchInstance"
                                        ]
                                    }
                                }, 
                                "CMD-RestartAppServer": {
                                    "_RunStaged": "false", 
                                    "_Stages": {
                                        "01_enact": [], 
                                        "02_enact": []
                                    }
                                }, 
                                "CMD-ConfigDeploy": {
                                    "_RunStaged": "true", 
                                    "_Stages": {
                                        "01_pre": [], 
                                        "02_enact": []
                                    }
                                }
                            }
                        }, 
                        "AvailabilityZoneCount": "Any", 
                        "InstanceSignalURL": {
                            "Ref": "AWSEBInstanceLaunchWaitHandle"
                        }, 
                        "_EnvironmentInfoTaskMapping": "EnvironmentInfoTasks"
                    }
                }, 
                "Type": "AWS::AutoScaling::AutoScalingGroup", 
                "DependsOn": "AWSEBBeanstalkMetadata", 
                "Properties": {
                    "LoadBalancerNames": [
                        {
                            "Ref": "AWSEBLoadBalancer"
                        }
                    ], 
                    "MinSize": "2", 
                    "LaunchConfigurationName": {
                        "Ref": "AWSEBAutoScalingLaunchConfiguration"
                    }, 
                    "AvailabilityZones": [
                        "us-east-2a", 
                        "us-east-2b", 
                        "us-east-2c"
                    ], 
                    "Cooldown": "360", 
                    "VPCZoneIdentifier": [
                        "subnet-dc1019b4", 
                        "subnet-0888cf72", 
                        "subnet-570ba41b"
                    ], 
                    "MaxSize": "4", 
                    "Tags": [
                        {
                            "Value": {
                                "Ref": "AWSEBEnvironmentName"
                            }, 
                            "Key": "elasticbeanstalk:environment-name", 
                            "PropagateAtLaunch": true
                        }, 
                        {
                            "Value": {
                                "Ref": "AWSEBEnvironmentName"
                            }, 
                            "Key": "Name", 
                            "PropagateAtLaunch": true
                        }, 
                        {
                            "Value": {
                                "Ref": "AWSEBEnvironmentId"
                            }, 
                            "Key": "elasticbeanstalk:environment-id", 
                            "PropagateAtLaunch": true
                        }
                    ]
                }
            }, 
            "AWSEBInstanceLaunchWaitCondition": {
                "Type": "AWS::CloudFormation::WaitCondition", 
                "DependsOn": "AWSEBAutoScalingGroup", 
                "Properties": {
                    "Timeout": "1200", 
                    "Count": "2", 
                    "Handle": {
                        "Ref": "AWSEBInstanceLaunchWaitHandle"
                    }
                }
            }, 
            "AWSEBAutoScalingScaleUpPolicy": {
                "Properties": {
                    "ScalingAdjustment": "1", 
                    "AutoScalingGroupName": {
                        "Ref": "AWSEBAutoScalingGroup"
                    }, 
                    "AdjustmentType": "ChangeInCapacity"
                }, 
                "Type": "AWS::AutoScaling::ScalingPolicy"
            }, 
            "AWSEBCloudwatchAlarmHigh": {
                "Properties": {
                    "AlarmActions": [
                        {
                            "Ref": "AWSEBAutoScalingScaleUpPolicy"
                        }
                    ], 
                    "MetricName": "NetworkOut", 
                    "ComparisonOperator": "GreaterThanThreshold", 
                    "Statistic": "Average", 
                    "AlarmDescription": "ElasticBeanstalk Default Scale Up alarm", 
                    "Period": "300", 
                    "Dimensions": [
                        {
                            "Value": {
                                "Ref": "AWSEBAutoScalingGroup"
                            }, 
                            "Name": "AutoScalingGroupName"
                        }
                    ], 
                    "EvaluationPeriods": "1", 
                    "Namespace": "AWS/EC2", 
                    "Threshold": "6000000"
                }, 
                "Type": "AWS::CloudWatch::Alarm"
            }, 
            "AWSEBBeanstalkMetadata": {
                "Metadata": {
                    "AWS::ElasticBeanstalk::Ext": {
                        "Parameters": {
                            "InstanceTypeFamily": {
                                "Ref": "InstanceTypeFamily"
                            }, 
                            "LogPublicationControl": {
                                "Ref": "LogPublicationControl"
                            }, 
                            "InstancePort": {
                                "Ref": "InstancePort"
                            }, 
                            "AWSEBEnvironmentId": {
                                "Ref": "AWSEBEnvironmentId"
                            }, 
                            "HooksPkgUrl": {
                                "Ref": "HooksPkgUrl"
                            }, 
                            "AWSEBEnvironmentName": {
                                "Ref": "AWSEBEnvironmentName"
                            }, 
                            "AWSEBReferrerId": {
                                "Ref": "AWSEBReferrerId"
                            }, 
                            "AppSource": {
                                "Ref": "AppSource"
                            }, 
                            "EnvironmentVariables": {
                                "Ref": "EnvironmentVariables"
                            }, 
                            "ECSClusterName": {
                                "Ref": "ECSClusterName"
                            }, 
                            "ECSTaskDefinitionName": {
                                "Ref": "ECSTaskDefinitionName"
                            }, 
                            "AWSEBAgentId": {
                                "Ref": "AWSEBAgentId"
                            }, 
                            "InstanceType": {
                                "Ref": "InstanceType"
                            }, 
                            "AWSEBEnvironmentBucket": {
                                "Ref": "AWSEBEnvironmentBucket"
                            }
                        }
                    }, 
                    "AWS::ElasticBeanstalk::Metadata": {
                        "EnvironmentId": "e-3dgu3ryvmv", 
                        "RequestId": "8bd9ccf5-e021-11e9-9152-8b17fcc6b576", 
                        "Version": "8bd9ccf5-e021-11e9-9152-8b17fcc6b576", 
                        "EnvironmentName": "CantiguaDevopsTestApp-env", 
                        "ContainerTypes": [
                            "ECS"
                        ], 
                        "DateUpdated": "2019-09-26T05:50:29", 
                        "DateCreated": "2019-09-26T03:03:49", 
                        "DeploymentVersion": 2, 
                        "ReservedVolumes": [
                            {
                                "Required": true, 
                                "ReservedEBSVolumeProperties": [
                                    "snapshot-id"
                                ], 
                                "AllowedTypes": [
                                    "ephemeral", 
                                    "ebs"
                                ], 
                                "DeviceName": "/dev/xvdcz"
                            }
                        ], 
                        "DateLastModified": "2019-09-26T05:50:32", 
                        "Name": "e-3dgu3ryvmv"
                    }
                }, 
                "Type": "AWS::CloudFormation::WaitConditionHandle"
            }, 
            "AWSEBCloudwatchAlarmLow": {
                "Properties": {
                    "AlarmActions": [
                        {
                            "Ref": "AWSEBAutoScalingScaleDownPolicy"
                        }
                    ], 
                    "MetricName": "NetworkOut", 
                    "ComparisonOperator": "LessThanThreshold", 
                    "Statistic": "Average", 
                    "AlarmDescription": "ElasticBeanstalk Default Scale Down alarm", 
                    "Period": "300", 
                    "Dimensions": [
                        {
                            "Value": {
                                "Ref": "AWSEBAutoScalingGroup"
                            }, 
                            "Name": "AutoScalingGroupName"
                        }
                    ], 
                    "EvaluationPeriods": "1", 
                    "Namespace": "AWS/EC2", 
                    "Threshold": "2000000"
                }, 
                "Type": "AWS::CloudWatch::Alarm"
            }, 
            "AWSEBUpdateWaitConditionHandleBKMGua": {
                "Type": "AWS::CloudFormation::WaitConditionHandle"
            }
        }, 
        "Description": "AWS Elastic Beanstalk environment (Name: 'CantiguaDevopsTestApp-env'  Id: 'e-3dgu3ryvmv')", 
        "Mappings": {
            "AWSEBAWSRegionArch2AMIBase": {
                "ap-south-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0b99c7725b9484f9e"
                }, 
                "eu-west-3": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-05b93cd5a1b552734"
                }, 
                "eu-north-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-8c169ef2"
                }, 
                "DEVO": {
                    "pv": "", 
                    "graphics": "ami-09144ebbb8d7191e3", 
                    "gpu": "ami-8482c6ec", 
                    "hvm": "ami-035b3c7efe6d061d5"
                }, 
                "eu-west-2": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0bdfa1adc3878cd23"
                }, 
                "eu-west-1": {
                    "pv": "", 
                    "graphics": "ami-052ab6144b7109942", 
                    "gpu": "ami-21ce4256", 
                    "hvm": "ami-0862aabda3fb488b5"
                }, 
                "ap-northeast-3": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0cc7fccf25a84eb7d"
                }, 
                "ap-northeast-2": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0be3e6f84d3b968cd"
                }, 
                "ap-northeast-1": {
                    "pv": "", 
                    "graphics": "ami-07d9abb2e4e558443", 
                    "gpu": "", 
                    "hvm": "ami-04b2d1589ab1d972c"
                }, 
                "us-gov-east-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-06c42577"
                }, 
                "me-south-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0f37c62f47ca5e88a"
                }, 
                "sa-east-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0bb96001cf2299257"
                }, 
                "ca-central-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0a67d15f2858e33cb"
                }, 
                "ap-east-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-10186361"
                }, 
                "cn-north-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0ca4f92bcfe42233b"
                }, 
                "us-gov-west-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-42235823"
                }, 
                "ap-southeast-1": {
                    "pv": "", 
                    "graphics": "ami-08f5f9e697fecc07f", 
                    "gpu": "", 
                    "hvm": "ami-0fb6b6f9e81056553"
                }, 
                "ap-southeast-2": {
                    "pv": "", 
                    "graphics": "ami-02a2862c8e4052671", 
                    "gpu": "", 
                    "hvm": "ami-075caa3491def750b"
                }, 
                "eu-central-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-026d3b3672c6e7b66"
                }, 
                "us-east-1": {
                    "pv": "", 
                    "graphics": "ami-09144ebbb8d7191e3", 
                    "gpu": "ami-8482c6ec", 
                    "hvm": "ami-035b3c7efe6d061d5"
                }, 
                "us-east-2": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-02f706d959cedf892"
                }, 
                "us-west-1": {
                    "pv": "", 
                    "graphics": "ami-0411f4002ffdfc559", 
                    "gpu": "", 
                    "hvm": "ami-0fcdcdb074d2bac5f"
                }, 
                "cn-northwest-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-02307248123e81dc5"
                }, 
                "us-west-2": {
                    "pv": "", 
                    "graphics": "ami-07a1d900a353e49dd", 
                    "gpu": "", 
                    "hvm": "ami-0f2176987ee50226e"
                }
            }, 
            "AWSEBOptions": {
                "options": {
                    "OptionDefinitionOverrideEnabled": true, 
                    "AWSEBHealthdGroupId": "b31b09a0-53a8-4140-8d54-c38c86d628bb", 
                    "HaltStartupCommandsOnFailure": "true", 
                    "AutoDeleteCluster": true, 
                    "SystemType": "enhanced", 
                    "UserDataScript": "https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/UserDataScript.sh", 
                    "LaunchType": "Migration", 
                    "ebgems": "https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/beanstalk-core-2.12.gem https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/beanstalk-core-healthd-1.1.gem https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/executor-1.2.gem", 
                    "tarballs": "https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/awseb-ruby-2.2.4-x86_64-20160503_1008.tar.gz https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/basehooks.tar.gz", 
                    "rpms": "https://s3.dualstack.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/stalks/eb_docker_ecs_4.2.1.201222.0_1567548290/lib/aws-elasticbeanstalk-tools-1.20-1.noarch.rpm", 
                    "FastVersionDeployment": "true", 
                    "ServiceRole": "aws-elasticbeanstalk-service-role", 
                    "HealthdProxyLogLocation": "", 
                    "CommandBasedLeaderElection": "true", 
                    "CloudConfigOptions": "cloud_final_modules:\n - [scripts-user, always]", 
                    "DefaultsScript": "/opt/elasticbeanstalk/containerfiles/support/container-defaults", 
                    "LeaderTestScript": "/opt/elasticbeanstalk/bin/leader-test.sh", 
                    "downloadSourceBundleScriptLocation": [
                        "https://s3.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/eb_patching_resources/download_source_bundle.py"
                    ], 
                    "DefaultSSHPort": "22", 
                    "ProxyServer": "", 
                    "AWSEBHealthdEndpoint": "", 
                    "EmbeddedConfigsetsEnabled": "true", 
                    "EBSNSTopicArn": "", 
                    "guid": "672223b9fc09", 
                    "nodeploymentOnStartup": "true", 
                    "ebpatchscripturl": [
                        "https://s3.us-east-2.amazonaws.com/elasticbeanstalk-env-resources-us-east-2/eb_patching_resources/patch_instance.py"
                    ]
                }
            }, 
            "AWSEBAWSRegionArch2AMI": {
                "ap-south-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0b99c7725b9484f9e"
                }, 
                "eu-west-3": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-05b93cd5a1b552734"
                }, 
                "eu-north-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-8c169ef2"
                }, 
                "DEVO": {
                    "pv": "", 
                    "graphics": "ami-09144ebbb8d7191e3", 
                    "gpu": "ami-8482c6ec", 
                    "hvm": "ami-035b3c7efe6d061d5"
                }, 
                "eu-west-2": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0bdfa1adc3878cd23"
                }, 
                "eu-west-1": {
                    "pv": "", 
                    "graphics": "ami-052ab6144b7109942", 
                    "gpu": "ami-21ce4256", 
                    "hvm": "ami-0862aabda3fb488b5"
                }, 
                "ap-northeast-3": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0cc7fccf25a84eb7d"
                }, 
                "ap-northeast-2": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0be3e6f84d3b968cd"
                }, 
                "ap-northeast-1": {
                    "pv": "", 
                    "graphics": "ami-07d9abb2e4e558443", 
                    "gpu": "", 
                    "hvm": "ami-04b2d1589ab1d972c"
                }, 
                "us-gov-east-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-06c42577"
                }, 
                "me-south-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0f37c62f47ca5e88a"
                }, 
                "sa-east-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0bb96001cf2299257"
                }, 
                "ca-central-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0a67d15f2858e33cb"
                }, 
                "ap-east-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-10186361"
                }, 
                "cn-north-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-0ca4f92bcfe42233b"
                }, 
                "us-gov-west-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-42235823"
                }, 
                "ap-southeast-1": {
                    "pv": "", 
                    "graphics": "ami-08f5f9e697fecc07f", 
                    "gpu": "", 
                    "hvm": "ami-0fb6b6f9e81056553"
                }, 
                "ap-southeast-2": {
                    "pv": "", 
                    "graphics": "ami-02a2862c8e4052671", 
                    "gpu": "", 
                    "hvm": "ami-075caa3491def750b"
                }, 
                "eu-central-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-026d3b3672c6e7b66"
                }, 
                "us-east-1": {
                    "pv": "", 
                    "graphics": "ami-09144ebbb8d7191e3", 
                    "gpu": "ami-8482c6ec", 
                    "hvm": "ami-035b3c7efe6d061d5"
                }, 
                "us-east-2": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-01cf4e215de27ef16"
                }, 
                "us-west-1": {
                    "pv": "", 
                    "graphics": "ami-0411f4002ffdfc559", 
                    "gpu": "", 
                    "hvm": "ami-0fcdcdb074d2bac5f"
                }, 
                "cn-northwest-1": {
                    "pv": "", 
                    "graphics": "", 
                    "gpu": "", 
                    "hvm": "ami-02307248123e81dc5"
                }, 
                "us-west-2": {
                    "pv": "", 
                    "graphics": "ami-07a1d900a353e49dd", 
                    "gpu": "", 
                    "hvm": "ami-0f2176987ee50226e"
                }
            }, 
            "AWSEBAWSInstanceTypeFamily2Arch": {
                "r5d": {
                    "Arch": "hvm"
                }, 
                "r3": {
                    "Arch": "hvm"
                }, 
                "r4": {
                    "Arch": "hvm"
                }, 
                "p2": {
                    "Arch": "hvm"
                }, 
                "p3": {
                    "Arch": "hvm"
                }, 
                "r5": {
                    "Arch": "hvm"
                }, 
                "t3a": {
                    "Arch": "hvm"
                }, 
                "g3s": {
                    "Arch": "hvm"
                }, 
                "hs1": {
                    "Arch": "hvm"
                }, 
                "h1": {
                    "Arch": "hvm"
                }, 
                "f1": {
                    "Arch": "hvm"
                }, 
                "cg1": {
                    "Arch": "hvm"
                }, 
                "z1d": {
                    "Arch": "hvm"
                }, 
                "x1e": {
                    "Arch": "hvm"
                }, 
                "d2": {
                    "Arch": "hvm"
                }, 
                "cc1": {
                    "Arch": "hvm"
                }, 
                "hi1": {
                    "Arch": "hvm"
                }, 
                "r5ad": {
                    "Arch": "hvm"
                }, 
                "cc2": {
                    "Arch": "hvm"
                }, 
                "cr1": {
                    "Arch": "hvm"
                }, 
                "m1": {
                    "Arch": "hvm"
                }, 
                "m2": {
                    "Arch": "hvm"
                }, 
                "m3": {
                    "Arch": "hvm"
                }, 
                "m4": {
                    "Arch": "hvm"
                }, 
                "m5": {
                    "Arch": "hvm"
                }, 
                "i2": {
                    "Arch": "hvm"
                }, 
                "i3": {
                    "Arch": "hvm"
                }, 
                "g2": {
                    "Arch": "graphics"
                }, 
                "g3": {
                    "Arch": "hvm"
                }, 
                "c1": {
                    "Arch": "hvm"
                }, 
                "c3": {
                    "Arch": "hvm"
                }, 
                "c4": {
                    "Arch": "hvm"
                }, 
                "c5": {
                    "Arch": "hvm"
                }, 
                "c5d": {
                    "Arch": "hvm"
                }, 
                "m5a": {
                    "Arch": "hvm"
                }, 
                "x1": {
                    "Arch": "hvm"
                }, 
                "m5ad": {
                    "Arch": "hvm"
                }, 
                "t1": {
                    "Arch": "hvm"
                }, 
                "m5d": {
                    "Arch": "hvm"
                }, 
                "c5n": {
                    "Arch": "hvm"
                }, 
                "t2": {
                    "Arch": "hvm"
                }, 
                "t3": {
                    "Arch": "hvm"
                }, 
                "r5a": {
                    "Arch": "hvm"
                }
            }, 
            "EnvironmentInfoTasks": {
                "systemtail": {
                    "LocationPrefix": "resources/environments/logs/systemtail/", 
                    "AutoClean": "true", 
                    "CommandName": "CMD-SystemTailLogs"
                }, 
                "tail": {
                    "LocationPrefix": "resources/environments/logs/tail/", 
                    "AutoClean": "true", 
                    "CommandName": "CMD-TailLogs"
                }, 
                "publish": {
                    "LocationPrefix": "resources/environments/logs/publish/"
                }, 
                "bundle": {
                    "LocationPrefix": "resources/environments/logs/bundle/", 
                    "AutoClean": "true", 
                    "CommandName": "CMD-BundleLogs"
                }
            }, 
            "ContainerMeta": {
                "AMIMeta": {
                    "RepoReleaseVersion": "2018.03", 
                    "AMIVersion": "2018.03.0"
                }
            }
        }
    }
}
